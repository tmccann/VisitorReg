import _extends from "@babel/runtime/helpers/esm/extends";
import cx from 'clsx';
import PropTypes from 'prop-types';
import * as React from 'react';
import { getUnhandledProps, useValueAndKey } from '../../lib';
import TableCell from './TableCell';

/**
 * A table can have a header cell.
 */
var TableHeaderCell = /*#__PURE__*/React.forwardRef(function (props, ref) {
  var _props$as = props.as,
    as = _props$as === void 0 ? 'th' : _props$as,
    className = props.className,
    sorted = props.sorted;
  var classes = cx(useValueAndKey(sorted, 'sorted'), className);
  var rest = getUnhandledProps(TableHeaderCell, props);
  return /*#__PURE__*/React.createElement(TableCell, _extends({}, rest, {
    as: as,
    className: classes,
    ref: ref
  }));
});
TableHeaderCell.handledProps = ["as", "className", "sorted"];
TableHeaderCell.displayName = 'TableHeaderCell';
TableHeaderCell.propTypes = process.env.NODE_ENV !== "production" ? {
  /** An element type to render as (string or function). */
  as: PropTypes.elementType,
  /** Additional classes. */
  className: PropTypes.string,
  /** A header cell can be sorted in ascending or descending order. */
  sorted: PropTypes.oneOf(['ascending', 'descending'])
} : {};
export default TableHeaderCell;