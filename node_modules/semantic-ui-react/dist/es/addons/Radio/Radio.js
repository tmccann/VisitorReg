import _extends from "@babel/runtime/helpers/esm/extends";
import * as React from 'react';
import { getUnhandledProps } from '../../lib';
import Checkbox from '../../modules/Checkbox';

/**
 * A Radio is sugar for <Checkbox radio />.
 * Useful for exclusive groups of sliders or toggles.
 * @see Checkbox
 * @see Form
 */
var Radio = /*#__PURE__*/React.forwardRef(function (props, ref) {
  var slider = props.slider,
    toggle = props.toggle,
    _props$type = props.type,
    type = _props$type === void 0 ? 'radio' : _props$type;
  var rest = getUnhandledProps(Radio, props);
  // radio, slider, toggle are exclusive
  // use an undefined radio if slider or toggle are present
  var radio = !(slider || toggle) || undefined;
  return /*#__PURE__*/React.createElement(Checkbox, _extends({}, rest, {
    type: type,
    radio: radio,
    slider: slider,
    toggle: toggle,
    ref: ref
  }));
});
Radio.handledProps = ["slider", "toggle", "type"];
Radio.displayName = 'Radio';
Radio.propTypes = process.env.NODE_ENV !== "production" ? {
  /** Format to emphasize the current selection state. */
  slider: Checkbox.propTypes.slider,
  /** Format to show an on or off choice. */
  toggle: Checkbox.propTypes.toggle,
  /** HTML input type, either checkbox or radio. */
  type: Checkbox.propTypes.type
} : {};
export default Radio;